/*
 * This file is generated by jOOQ.
 */
package com.revolut.test.backend.ricardofuzeto.database;


import com.revolut.test.backend.ricardofuzeto.database.tables.PendingDeposit;
import com.revolut.test.backend.ricardofuzeto.database.tables.PendingWithdraw;
import com.revolut.test.backend.ricardofuzeto.database.tables.Transfer;
import com.revolut.test.backend.ricardofuzeto.database.tables.TransferAttempt;
import com.revolut.test.backend.ricardofuzeto.database.tables.records.PendingDepositRecord;
import com.revolut.test.backend.ricardofuzeto.database.tables.records.PendingWithdrawRecord;
import com.revolut.test.backend.ricardofuzeto.database.tables.records.TransferAttemptRecord;
import com.revolut.test.backend.ricardofuzeto.database.tables.records.TransferRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TransferAttemptRecord, Integer> IDENTITY_TRANSFER_ATTEMPT = Identities0.IDENTITY_TRANSFER_ATTEMPT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PendingDepositRecord> KEY_PENDING_DEPOSIT_PRIMARY = UniqueKeys0.KEY_PENDING_DEPOSIT_PRIMARY;
    public static final UniqueKey<PendingWithdrawRecord> KEY_PENDING_WITHDRAW_PRIMARY = UniqueKeys0.KEY_PENDING_WITHDRAW_PRIMARY;
    public static final UniqueKey<TransferRecord> KEY_TRANSFER_PRIMARY = UniqueKeys0.KEY_TRANSFER_PRIMARY;
    public static final UniqueKey<TransferAttemptRecord> KEY_TRANSFER_ATTEMPT_PRIMARY = UniqueKeys0.KEY_TRANSFER_ATTEMPT_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PendingDepositRecord, TransferRecord> PENDING_DEPOSIT_IBFK_1 = ForeignKeys0.PENDING_DEPOSIT_IBFK_1;
    public static final ForeignKey<PendingWithdrawRecord, TransferRecord> PENDING_WITHDRAW_IBFK_1 = ForeignKeys0.PENDING_WITHDRAW_IBFK_1;
    public static final ForeignKey<TransferAttemptRecord, TransferRecord> TRANSFER_ATTEMPT_IBFK_1 = ForeignKeys0.TRANSFER_ATTEMPT_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TransferAttemptRecord, Integer> IDENTITY_TRANSFER_ATTEMPT = Internal.createIdentity(TransferAttempt.TRANSFER_ATTEMPT, TransferAttempt.TRANSFER_ATTEMPT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<PendingDepositRecord> KEY_PENDING_DEPOSIT_PRIMARY = Internal.createUniqueKey(PendingDeposit.PENDING_DEPOSIT, "KEY_pending_deposit_PRIMARY", PendingDeposit.PENDING_DEPOSIT.ID);
        public static final UniqueKey<PendingWithdrawRecord> KEY_PENDING_WITHDRAW_PRIMARY = Internal.createUniqueKey(PendingWithdraw.PENDING_WITHDRAW, "KEY_pending_withdraw_PRIMARY", PendingWithdraw.PENDING_WITHDRAW.ID);
        public static final UniqueKey<TransferRecord> KEY_TRANSFER_PRIMARY = Internal.createUniqueKey(Transfer.TRANSFER, "KEY_transfer_PRIMARY", Transfer.TRANSFER.ID);
        public static final UniqueKey<TransferAttemptRecord> KEY_TRANSFER_ATTEMPT_PRIMARY = Internal.createUniqueKey(TransferAttempt.TRANSFER_ATTEMPT, "KEY_transfer_attempt_PRIMARY", TransferAttempt.TRANSFER_ATTEMPT.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<PendingDepositRecord, TransferRecord> PENDING_DEPOSIT_IBFK_1 = Internal.createForeignKey(com.revolut.test.backend.ricardofuzeto.database.Keys.KEY_TRANSFER_PRIMARY, PendingDeposit.PENDING_DEPOSIT, "pending_deposit_ibfk_1", PendingDeposit.PENDING_DEPOSIT.ID);
        public static final ForeignKey<PendingWithdrawRecord, TransferRecord> PENDING_WITHDRAW_IBFK_1 = Internal.createForeignKey(com.revolut.test.backend.ricardofuzeto.database.Keys.KEY_TRANSFER_PRIMARY, PendingWithdraw.PENDING_WITHDRAW, "pending_withdraw_ibfk_1", PendingWithdraw.PENDING_WITHDRAW.ID);
        public static final ForeignKey<TransferAttemptRecord, TransferRecord> TRANSFER_ATTEMPT_IBFK_1 = Internal.createForeignKey(com.revolut.test.backend.ricardofuzeto.database.Keys.KEY_TRANSFER_PRIMARY, TransferAttempt.TRANSFER_ATTEMPT, "transfer_attempt_ibfk_1", TransferAttempt.TRANSFER_ATTEMPT.TRANSFER_ID);
    }
}
