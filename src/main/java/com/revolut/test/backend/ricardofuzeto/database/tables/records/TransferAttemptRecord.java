/*
 * This file is generated by jOOQ.
 */
package com.revolut.test.backend.ricardofuzeto.database.tables.records;


import com.revolut.test.backend.ricardofuzeto.database.tables.TransferAttempt;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferAttemptRecord extends UpdatableRecordImpl<TransferAttemptRecord> implements Record4<Integer, String, Timestamp, UInteger> {

    private static final long serialVersionUID = -151113831;

    /**
     * Setter for <code>transfer_attempt.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>transfer_attempt.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>transfer_attempt.transfer_id</code>.
     */
    public void setTransferId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>transfer_attempt.transfer_id</code>.
     */
    public String getTransferId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>transfer_attempt.date_of_transfer</code>.
     */
    public void setDateOfTransfer(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>transfer_attempt.date_of_transfer</code>.
     */
    public Timestamp getDateOfTransfer() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>transfer_attempt.result</code>.
     */
    public void setResult(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>transfer_attempt.result</code>.
     */
    public UInteger getResult() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Timestamp, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Timestamp, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TransferAttempt.TRANSFER_ATTEMPT.ID;
    }

    @Override
    public Field<String> field2() {
        return TransferAttempt.TRANSFER_ATTEMPT.TRANSFER_ID;
    }

    @Override
    public Field<Timestamp> field3() {
        return TransferAttempt.TRANSFER_ATTEMPT.DATE_OF_TRANSFER;
    }

    @Override
    public Field<UInteger> field4() {
        return TransferAttempt.TRANSFER_ATTEMPT.RESULT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTransferId();
    }

    @Override
    public Timestamp component3() {
        return getDateOfTransfer();
    }

    @Override
    public UInteger component4() {
        return getResult();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTransferId();
    }

    @Override
    public Timestamp value3() {
        return getDateOfTransfer();
    }

    @Override
    public UInteger value4() {
        return getResult();
    }

    @Override
    public TransferAttemptRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TransferAttemptRecord value2(String value) {
        setTransferId(value);
        return this;
    }

    @Override
    public TransferAttemptRecord value3(Timestamp value) {
        setDateOfTransfer(value);
        return this;
    }

    @Override
    public TransferAttemptRecord value4(UInteger value) {
        setResult(value);
        return this;
    }

    @Override
    public TransferAttemptRecord values(Integer value1, String value2, Timestamp value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferAttemptRecord
     */
    public TransferAttemptRecord() {
        super(TransferAttempt.TRANSFER_ATTEMPT);
    }

    /**
     * Create a detached, initialised TransferAttemptRecord
     */
    public TransferAttemptRecord(Integer id, String transferId, Timestamp dateOfTransfer, UInteger result) {
        super(TransferAttempt.TRANSFER_ATTEMPT);

        set(0, id);
        set(1, transferId);
        set(2, dateOfTransfer);
        set(3, result);
    }
}
