/*
 * This file is generated by jOOQ.
 */
package com.revolut.test.backend.ricardofuzeto.database;


import com.revolut.test.backend.ricardofuzeto.database.tables.FlywaySchemaHistory;
import com.revolut.test.backend.ricardofuzeto.database.tables.PendingDeposit;
import com.revolut.test.backend.ricardofuzeto.database.tables.PendingWithdraw;
import com.revolut.test.backend.ricardofuzeto.database.tables.Transfer;
import com.revolut.test.backend.ricardofuzeto.database.tables.TransferAttempt;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = -300509892;

    /**
     * The reference instance of <code></code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = com.revolut.test.backend.ricardofuzeto.database.tables.FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>pending_deposit</code>.
     */
    public final PendingDeposit PENDING_DEPOSIT = com.revolut.test.backend.ricardofuzeto.database.tables.PendingDeposit.PENDING_DEPOSIT;

    /**
     * The table <code>pending_withdraw</code>.
     */
    public final PendingWithdraw PENDING_WITHDRAW = com.revolut.test.backend.ricardofuzeto.database.tables.PendingWithdraw.PENDING_WITHDRAW;

    /**
     * The table <code>transfer</code>.
     */
    public final Transfer TRANSFER = com.revolut.test.backend.ricardofuzeto.database.tables.Transfer.TRANSFER;

    /**
     * The table <code>transfer_attempt</code>.
     */
    public final TransferAttempt TRANSFER_ATTEMPT = com.revolut.test.backend.ricardofuzeto.database.tables.TransferAttempt.TRANSFER_ATTEMPT;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            PendingDeposit.PENDING_DEPOSIT,
            PendingWithdraw.PENDING_WITHDRAW,
            Transfer.TRANSFER,
            TransferAttempt.TRANSFER_ATTEMPT);
    }
}
